.profile
  .ui.grid
    .row
      .three.wide.column
      .three.wide.column.profile-title
        p.title My Profile
    .row.profile-details
      .three.wide.column
      .three.wide.column.profile-image
        = image_tag @user.image.small.url
      .two.wide.column
        h1= @user.name
        h2.spacing-top My Personal Info
        p.spacing-top-small= "Birthday: #{l@user.birthday unless @user.birthday.nil?}"
        p.spacing-top-smaller= "Location: test #{@current_city}"
      .two.wide.column.profile-interest.center
        h2.spacing-top My Interest
        #interest-container.spacing-top-small
          #interest-link= render partial: 'interest', locals: { user: @user }
      .two.wide.column.account-links.center
        h2.spacing-top My Linked Accounts
        .spacing-top-small
          - providers = ["facebook", "twitter"]

          - providers.each do |provider|
            .provider.spacing-top-small
              - if current_user.has_linked_provider?(provider)
                - if current_user.authentications.count > 1
                  = link_to delete_oauth_path(provider), class: "ui #{provider} icon button" do
                    i(class="#{provider} icon")
                  = link_to "Unlink account", delete_oauth_path(provider), method: :delete
                - else
                  div(class="ui #{provider} icon button")
                    i(class="#{provider} icon")
                  span.grayed.spacing-left-small= "Unlink account"
              - else
                = link_to auth_at_provider_path(provider: provider), class: "ui #{provider} blurred icon button" do
                  i(class="#{provider} icon")
                = link_to "Link account", auth_at_provider_path(provider: provider), class: 'small-spacing-left blurred'

    .row.campaigns-title
      .three.wide.column
      .ten.wide.column
        p.title Participating Campaigns
      .three.wide.column

.participating-campaigns
  .ui.page.stackable.grid
    .row
      .two.wide.column
      .twelve.wide.column
        .ui.stackable.three.column.grid
          - @campaigns.each do |campaign|
              .column.limit-max-height
                = link_to campaign_path(campaign) do
                  .campaign-panel
                    = image_tag campaign.image, class: 'border-radius'
                    .body-section
                      h3.ui.header.uppercase = campaign.title
                      p.description = campaign.description.split.slice(0, 6).join(" ") << "..."
                      .ui.grid
                        .eight.wide.column
                        .right.aligned.eight.wide.column.countdown-container
                          span.countdown = campaign.time_remaining
